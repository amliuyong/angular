
// --------------------
// Forms

two approaches:
- Teamplate-Driven
- Reactive

imports: [FormsModule ...]

<form (ngSubmit)="onSubmit()" #f="ngForm">

       <div
         id="user-data"
         ngModelGroup="userData"
         #userData="ngModelGroup">

         <div class="form-group">
           <label for="username">Username</label>
           <input
             type="text"
             id="username"
             class="form-control"
             ngModel
             name="username"
             required>
         </div>

         <button
           class="btn btn-default"
           type="button"
           (click)="suggestUserName()">Suggest an Username
         </button>


         <div class="form-group">
           <label for="email">Mail</label>
           <input
             type="email"
             id="email"
             class="form-control"
             ngModel
             name="email"
             required
             email
             #email="ngModel">
           <span class="help-block" *ngIf="!email.valid && email.touched">Please enter a valid email!</span>
         </div>

       </div>


       <p *ngIf="!userData.valid && userData.touched">User Data is invalid!</p>

       <div class="form-group">
         <label for="secret">Secret Questions</label>
         <select
           id="secret"
           class="form-control"
           [ngModel]="defaultQuestion"
           name="secret">
           <option value="pet">Your first Pet?</option>
           <option value="teacher">Your first teacher?</option>
         </select>
       </div>


       <div class="form-group">
         <textarea
           name="questionAnswer"
           rows="3"
           class="form-control"
           [(ngModel)]="answer"></textarea>
       </div>
       <p>Your reply: {{ answer }}</p>

       <div class="radio" *ngFor="let gender of genders">
         <label>
           <input
             type="radio"
             name="gender"
             ngModel
             [value]="gender"
             required>
           {{ gender }}
         </label>
       </div>

       <button
         class="btn btn-primary"
         type="submit"
         [disabled]="!f.valid">Submit
       </button>
</form>



// form submit
// 1)
<form (ngSubmit)="onSubmit(f)" #f>

onSubmit(form: ElementRef) {
   console.log(form);
 }

// 2)
 <form (ngSubmit)="onSubmit(f)" #f="ngForm">

 onSubmit(form: ngForm) {
    console.log(form);
    console.log(form.value.username)
  }

// 3)
 <form (ngSubmit)="onSubmit()" #f="ngForm">

   @ViewChild('f') singnupForm: NgForm;

   onSubmit() {
      console.log(this.singnupForm);
    }

NgForm/form-control property:
- dirty
- disabled
- enabled
- touched
- errors
- valid

// validate from input

//-  email
<input
    type="email"
    id="email"
    class="form-control"
    ngModel
    name="email"
    required
    email
    #email="ngModel">
<span class="help-block"
 *ngIf="!email.valid && email.touched">
 Please enter a valid email!
 </span>

// - pattern
 <input type="number" id="amount" class="form-control" name="amount"
                 ngModel required pattern="^[1-9]+[0-9]*$"
  >


//- form submit button
<form (ngSubmit)="onSubmit()" #f="ngForm">

<button
      class="btn btn-primary"
      type="submit"
      [disabled]="!f.valid">Submit
</button>

//-- css  .ng-invalid .ng-touched .ng-dirty

input.ng-invalid.ng-touched {
  border: 1px solid red;
}

// - default value - one way binding

<div class="form-group">
    <label for="secret">Secret Questions</label>
    <select
            id="secret"
            class="form-control"
            [ngModel]="defaultQuestion"
            name="secret">
            <option value="pet">Your first Pet?</option>
            <option value="teacher">Your first teacher?</option>
      </select>
</div>

# in component class
defaultQuestion = 'pet'


// - Two way binding

<div class="form-group">
         <textarea
           name="questionAnswer"
           rows="3"
           class="form-control"
           [(ngModel)]="answer">
          </textarea>
</div>
<p>Your reply: {{ answer }}</p>

# in component class
answer:string;


//- Group form data
<div
  id="user-data"
  ngModelGroup="userData"
  #userData="ngModelGroup">

...//from controls ...

</div>
# -  validate group data, userData is local ref to '#userData'
<p *ngIf="!userData.valid && userData.touched">User Data is invalid!</p>

now you access in component:
this.signupForm.userData.username

// - Radio, binding data via [value]

<div class="radio" *ngFor="let gender of genders">
    <label>
      <input
        type="radio"
        name="gender"
        ngModel
        [value]="gender"
        required>
      {{ gender }}
    </label>
</div>

//- Set from value in component directly

@ViewChild('f') signupForm: NgForm;

this.signupForm.setValue({
  userData: {
    username: suggestedName,
    email: ''
  },
  secret: 'pet',
  questionAnswer: '',
  gender: 'male'
});

this.signupForm.form.patchValue({
  userData: {
    username: suggestedName
  }
});


//- form submit and show result patten
# component.html

<form>
  ....
</form>
<hr>
<div class="row" *ngIf="submitted">
  <div class="col-xs-12">
    <h3>Your Data</h3>
    <p>Username: {{ user.username }}</p>
</div>

# component.ts
submitted = false;
onSubmit(){
   this.submitted = true;
   ....

   this.signupForm.reset();  // reset form
}



// ----------------------------
//use form local ref

<div class="col-sm-5 form-group">
        <label for="name">Name</label>
        <input type="text" id="name" class="form-control" #nameInput>
</div>

@ViewChild('nameInput')
nameInputRef: ElementRef;

const ingName = this.nameInputRef.nativeElement.value;



// local refer - to preview image

 <div class="row">
      <div class="col-xs-12">
        <div class="form-group">
          <label for="imagePath">Image URL</label>
          <input
            type="text"
            id="imagePath"
            formControlName="imagePath"
            class="form-control"
            #imagePath
          >
        </div>
      </div>
 </div>

<div class="row">
    <div class="col-xs-12">
      <img [src]="imagePath.value" class="img-responsive">
    </div>
</div>
